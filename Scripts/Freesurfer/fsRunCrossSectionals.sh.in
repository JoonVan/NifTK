#!/bin/bash

#/*============================================================================
#
#  NifTK: A software platform for medical image computing.
#
#  Copyright (c) University College London (UCL). All rights reserved.
#
#  This software is distributed WITHOUT ANY WARRANTY; without even
#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#  PURPOSE.
#
#  See LICENSE.txt in the top level directory for details.
#
#============================================================================*/

export SUBJECTS_DIR=`pwd`

source _fsInclude.sh

# Note: The automatic doxygen generator uses the first two lines of the usage message.

function Usage()
{
cat <<EOF
This script will run the standard FreeSurfer process.

Usage: fsRunCrossSectionals.sh [ options ] ALLFR ALLHA CCCCC DDDDD etc.

  All arguments after the options are FreeSurfer directories under the current directory.
  
Options:

  -not-our-mask           : Don't use our brain mask           [ default is to use it]
  -not-our-vents-fix      : Don't use our vents fix            [ default is to use it] 
  -start                  : Step to start at                   [ default 1 ie. auto-recon1]
  -stop                   : Step to stop at                    [ default 3 ie. auto-recon3]
  -reconall " options "   : Any additiopnal options to pass to recon-all, in quotes.
  -r1 " -notal-check "    : Any additional options to pass to autorecon1, in quotes.
  -r2 " options "         : Any additional options to pass to autorecon2, in quotes.
  -r3 " options "         : Any additional options to pass to autorecon3, in quotes.
  -echo                   : Just echo the command, don't actually do it.
  -expert                 : Name of an expert options file
      
EOF

# Prints a list of known hints.
freesurfer_hints

exit 127
}

# Check args

check_for_help_arg "$*"
if [ $? -eq 1 ]; then
  Usage
fi

if [ $# -lt 1 ]; then
  Usage
fi

# Parse options.
OUR_MASK="TRUE"
OUR_VENTS_FIX="TRUE"
RECONALL_ARGS=_
RECON1_ARGS=_
RECON2_ARGS=_
RECON3_ARGS=_
EXPERT_OPTS=_
START=1
STOP=3
ECHO=OFF
DONE_OPTIONS=FALSE

while [ "_$1" != "_" -a "$DONE_OPTIONS" = "FALSE" ] ; do
    if [ "$1" = "-reconall" ] ; then
        RECONALL_ARGS="\"$2\""
        shift 2
    elif [ "$1" = "-r1" ] ; then
        RECON1_ARGS="\"$2\""
        shift 2
    elif [ "$1" = "-r2" ] ; then
        RECON2_ARGS="\"$2\""
        shift 2
    elif [ "$1" = "-r3" ] ; then
        RECON3_ARGS="\"$2\""
        shift 2
    elif [ "$1" = "-start" ] ; then
        START="$2"
        shift 2
    elif [ "$1" = "-stop" ] ; then
        STOP="$2"
        shift 2
    elif [ "$1" = "-echo" ] ; then
        ECHO="ON"
        shift 1                       
    elif [ "$1" = "-expert" ] ; then
        EXPERT_OPTS="$2"
        shift 2
    elif [ "$1" = "-not-our-mask" ] ; then
        OUR_MASK="FALSE"
        shift 1                
    elif [ "$1" = "-not-our-vents-fix" ] ; then
        OUR_VENTS_FIX="FALSE"
        shift 1                                 
    else
        DONE_OPTIONS="TRUE"
    fi
done

# If no directories, no point continuing
if [ "_$1" = "_" ]; then
  Usage
fi

check_freesurfer_env

check_all_freesurfer_programs_exist

check_all_directories_in_string_exists "$*"

# Generate commands file
for f in $*
do
  echo "_fsRunCrossSectional.sh $f $OUR_MASK $OUR_VENTS_FIX $RECONALL_ARGS $RECON1_ARGS $RECON2_ARGS $RECON3_ARGS $EXPERT_OPTS $START $STOP $ECHO" >> fsRunCrossSectional_$$_commands.txt
done

# And Run it.
run_batch_job fsRunCrossSectional_$$_commands.txt
