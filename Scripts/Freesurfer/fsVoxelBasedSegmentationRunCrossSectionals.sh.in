#!/bin/bash

#/*============================================================================
#
#  NifTK: A software platform for medical image computing.
#
#  Copyright (c) University College London (UCL). All rights reserved.
#
#  This software is distributed WITHOUT ANY WARRANTY; without even
#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#  PURPOSE.
#
#  See LICENSE.txt in the top level directory for details.
#
#============================================================================*/

SUBJECTS_DIR=`pwd`

source _fsInclude.sh

# Note: The automatic doxygen generator uses the first two lines of the usage message.

function Usage()
{
cat <<EOF
Used to run a voxel based cortical thickness estimation on a FreeSurfer folder.

Usage: fsVoxelBasedSegmentationRunCrossSectionals.sh [ options ] ALLFR ALLHA CCCCC DDDDD etc.

  All arguments after the options are FreeSurfer directories under the current directory.
  
  Each directory structure should already contain:
  
  <patient>/mri/orig/001.mgz
  <patient>/mri/mask.mgz
  <patient>/mri/wmmask.mgz
  
Options:

  -notalairach   : When processing the wmmask.mgz, don't add the talairach transformation.
                   This is appropriate if the mask (i.e. the segmentation) was done on an image
                   that had already been registered by FreeSurfer.  i.e. if you exported the T1.mgz
                   and then segmented that, then you wont need an additional talairach transformation.
  
  
EOF

exit 127
}

# Check args

check_for_help_arg "$*"
if [ $? -eq 1 ]; then
  Usage
fi

if [ $# -lt 1 ]; then
  Usage
fi

do_talairach=1
DONE_OPTIONS=FALSE

while [ "_$1" != "_" -a "$DONE_OPTIONS" = "FALSE" ] ; do
    if [ "$1" = "-notalairach" ] ; then
    	do_talairach=0
    	shift 1
    else
        DONE_OPTIONS="TRUE"
    fi
done

# If no directories, no point continuing
if [ "_$1" = "_" ]; then
  Usage
fi

check_freesurfer_env

check_all_freesurfer_programs_exist

check_all_directories_in_string_exists "$*"

# Generate commands file
for f in $*
do
  echo "_fsVoxelBasedSegmentationRunCrossSectional.sh $f $do_talairach " >> fsVoxelBasedSegmentationRunCrossSectionals_$$_commands.txt
done

# And Run it.
run_batch_job fsVoxelBasedSegmentationRunCrossSectionals_$$_commands.txt
