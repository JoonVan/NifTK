/**

\page ThirdPartySoftware Third Party Software

\section ThirdPartySoftwareIntro Introduction

With the exception of NiftyView, each of the individual Nifty<Something> packages, 
listed <a href="http://cmic.cs.ucl.ac.uk/home/software/">here</a> can be downloaded individually, 
and by design have very few dependencies and are easy to build. This design choice was to
satisfy the needs of the research community, where our users are typically interested in small
lightweight packages that do a very specific job very well. So the Nifty<Something> packages
are self contained, and can be built independently of each other.

However, this project contains 
<ul>
<li>\ref UserManualNiftyView - for all platforms.</li>
<li>\ref UserManualCommandLineApps - for all platforms.</li> 
<li>\ref UserManualScripts - for Unix/Linux/Mac users only.</li>
</ul>
as well as the means to download and install all the light-weight Nifty<Something> packages.
The dependencies on third part software are now explained in detail.

\section ThirdPartySoftwareVersions Current Versions

The @NIFTK_PLATFORM@ platform contains what has become a very typical technology stack for providing desktop support
of medical imaging analysis and visualisation functionality. Specifically, the following third party libraries are used:

<ul>
<li>Boost: @BOOST_VERSION@ </li>
<li>GDCM: @GDCM_VERSION@ </li>
<li>Qt: @QT_VERSION_MAJOR@.@QT_VERSION_MINOR@.@QT_VERSION_PATCH@ </li>
<li>VTK: @VTK_VERSION@ </li>
<li>ITK: @NIFTK_ITK_VERSION_IN_SUPERBUILD@ </li>
<li>CTK: @CTK_REVISION_ID@ </li>
<li>MITK: @MITK_REVISION_ID@ </li>
</ul>

and this version of the @NIFTK_PLATFORM@ documentation was generated from Subversion revision ID: @NIFTK_SVN_REVISION_ID@.

\section ThirdPartySoftwareDependencies Dependencies

Before building the toolkit, the user must decide whether or not they are building the GUI
by selecting the BUILD_GUI flag to be either OFF or ON. If the user has no intention of building 
the GUI, and only wants scripts and command line programs, then the list of dependencies is smaller. 
Thus there are two different sets of dependencies listed below, where -> denotes "depends upon".

For NON-GUI builds:
<ol>
<li>ITK -> GDCM </li>
<li>MITK -> ITK </li>
<li>MITK -> VTK </li>
<li>MITK -> Boost </li>
<li>@NIFTK_PLATFORM@ -> ITK </li>
<li>@NIFTK_PLATFORM@ -> VTK </li>
<li>@NIFTK_PLATFORM@ -> Boost </li>
<li>@NIFTK_PLATFORM@ -> MITK </li>
</ol>

For GUI builds:
<ol>
<li>VTK -> Qt</li>
<li>ITK -> GDCM </li>
<li>CTK -> Qt </li>
<li>MITK -> ITK </li>
<li>MITK -> VTK </li>
<li>MITK -> Boost </li>
<li>MITK -> CTK </li>
<li>MITK -> Qt </li>
<li>@NIFTK_PLATFORM@ -> ITK </li>
<li>@NIFTK_PLATFORM@ -> VTK </li>
<li>@NIFTK_PLATFORM@ -> Boost </li>
<li>@NIFTK_PLATFORM@ -> CTK </li>
<li>@NIFTK_PLATFORM@ -> MITK </li>
<li>@NIFTK_PLATFORM@ -> Qt </li>
</ol>

Note: So from these lists we can see that Qt, Boost and GDCM have no dependencies, they are built without the
knowledge of any of the other packages. Also note that the larger packages such as CTK can download and install
additional packages, not listed here. For example CTK will download DCMTK, but as the rest of @NIFTK_PLATFORM@
is not specifically using CMake to do a FindDCMTK we do not list it here.

*/