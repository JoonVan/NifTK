/**
\page ICPBasedRegistrationService ICP Based Registration Service (ICPBRS)
\tableofcontents

\section ICPBRS ICP Based Registration Service (ICPBRS)

\li \ref UCLCopyrightStatement
\li \ref UCLDefinitionsAcronyms
\li \ref UCLRequirementsTraceability
\li \ref UCLReferences

\subsection ICPBRSCSD Component Specification Document (CSD)

<table>
<tr><td>Document ID:</td><td>UCL-2001-CSD-0002-ICPBasedRegistrationService.dox</td></tr>
<tr><td>Prepared By:</td><td>Matt Clarkson</td></tr>
<tr><td>Authorised By:</td><td></td></tr>
<tr><td>Last Modified:</td><td>26 Jun 2015</td></tr>
</table>

\subsection ICPBRSHistory Revision History

A brief summary of changes between authorised releases of this document is recorded here.
This section only describes the changes between authorised published versions.

<table>
  <tr>
    <th>
      Version
    </th>
    <th>
      Date
    </th>
    <th>
      Author(s)
    </th>
    <th>
      Change(s)
    </th>
    <th>
      Sections Affected
    </th>
  </tr>
  <tr>
    <td>
      0.1
    </td>
    <td>
      26 Jun 2015
    </td>
    <td>
      Matt Clarkson
    </td>
    <td>
      Initial Version
    </td>
    <td>
      All
    </td>
  </tr>
</table>

\section ICPBRSIntro Introduction

The purpose of this Component Specification Document (CSD) is to describe the
ICP Based Registration Service (PBRS).  It is intended to be read by those wanting
to gain a technical understanding as to the fundamental requirements, design and
implementation.  This document is not intended for end-users.

\subsection ICPBRSScope Scope

This document defines the requirements, design and implementation.

\subsection ICPBRSGeneral General Description

\section ICPBRSRequirements Requirements
\subsection ICPBRSFuncReq Functional Requirements

These functional requirements shall be expressed, each on a single line.

\subsection ICPBRSNonFuncReq Non-Functional Requirements

These non-functional requirements shall be expressed, each on a single line.

REQ-2001-CSD-0002-001-01: The ICPBRS shall be available as a Micro Service.

\section ICPBRSDesign Design
\subsection ICPBRSArchitecture Architecture

Please read background information on the <a href="http://docs.mitk.org/2014.03/MicroServices_Overview.html">MITK Micro Services</a>.

\subsection ICPBRSError Error Handling

From a design perspective, all errors shall be communicated by throwing an mitk::Exception.

\section ICPBRSImpl Implementation

A few implementation details are described below.

\subsection ICPBRSLogging Logging

This service is primarily a function call to a mathematical routine. It is a stateless,
synchronous design, and as errors will be thrown immediately there is no need for logging.
Any logging to describe which points have been registered can be performed by the calling client.

\subsection ICPBRSClassesFunctions Classes and Functions

*/
