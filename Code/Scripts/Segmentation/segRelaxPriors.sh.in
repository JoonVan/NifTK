#!/bin/bash

#/*================================================================================
#
#  NifTK: An image processing toolkit jointly developed by the
#              Dementia Research Centre, and the Centre For Medical Image Computing
#              at University College London.
#  
#  See:        http://dementia.ion.ucl.ac.uk/
#              http://cmic.cs.ucl.ac.uk/
#              http://www.ucl.ac.uk/
#
#  Copyright (c) UCL : See LICENSE.txt in the top level directory for details. 
#
#  Last Changed      : $LastChangedDate: 2010-05-28 22:05:02 +0100 (Fri, 28 May 2010) $ 
#  Revision          : $Revision: 3326 $
#  Last modified by  : $Author: mjc $
#
#  Original author   : m.clarkson@ucl.ac.uk
#
#  This software is distributed WITHOUT ANY WARRANTY; without even
#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#  PURPOSE.  See the above copyright notices for more information.
#
#=================================================================================*/

#######################################################################################
# Deprecated: Script to run Jorge's segmentation.
#######################################################################################

source _niftkCommon.sh

# Note: The automatic doxygen generator uses the first two lines of the usage message.

function Usage()
{
cat <<EOF
#######################################################################################
# NOTE: Deprecated. Use NiftySeg instead.                                             #
#######################################################################################

This script runs Jorge's segmentation as described in [1],
using linear [2] and non-linear [3] registration to an atlas.

Usage: segRelaxPriors.sh image.nii mask.nii [options] 

Mandatory Arguments:
 
  image.nii               : The T1 image you want segmenting.
  mask.nii                : Brain mask, in same space as image.nii.
  
Options:

  -cpp          cpp.nii   : If you have already done the registration, pass in the FFD control point file.

  -atlas        image.nii : Atlas image.
  
                            The atlas could, for example, be the
                            one found in spm8/canonical/avg152T1.nii or avg305T1.nii
                           
  -grey         image.nii : Grey matter prior, in same space as atlas. 
  -white        image.nii : White matter prior, in same space as atlas.
  -csf          image.nii : CSF prior, in same space as atlas.

                            These apriori arguments could, for example, be 
                            the priors in spm8/apriori directory.

  -deep_grey    image.nii : Grey matter prior image with deep grey matter masked out.
  
  -internal_csf image.nii : CSF prior image, with internal CSF masked out.
                             
  -spm                    : SPM directory, which if specified is added
                            onto the front of the MATLABPATH variable

  -tmproot dir            : Define a root directory for temporary files. Default /tmp
                            The difference between this option and the next, is that this
                            one takes the root directory (eg. /tmp) and creates a sub directory
                            with a process ID in it. (eg. /tmp/seg.1234) whereas the next option
                            just uses exactly what you give it.
                            
  -tmpdir dir             : Set temporary workspace directory.

  -keeptmp                : Keep temporary workspace directory
  
  -gpu                    : Turn on GPU. No memory checking done.

  -levels                 : The number of multi-resolution levels in pyramid. Default 3.
  
  -levels_to_perform      : The number of multi-resolution levels to actually optimise. Default 2.
  
  -dilations              : The number of dilations of brain mask. Default 2.

[1] Manuel Jorge Cardoso, Matthew J. Clarkson, Gerard R. Ridgway,
Marc Modat, Nick C Fox and Sebastien Ourselin, 
"Improved Maximum A Posteriori Cortical Segmentation by Iterative Relaxation Of Priors" 
G.-Z. Yang et al. (Eds):MICCAI 2009, Part II, LNCS 5762, pp. 441-449, 2009.
                             
[2] Sebastien Ourselin, A Roche, G Subsol, Xavier Pennec, and Nicholas Ayache.
"Reconstructing a 3d structure from serial histological sections" 
Image and Vision Computing, 19(2000) 25-31: doi:10.1016/S0262-8856(00)00052-4    

[3] Marc Modat, Gerard R. Ridgway, Zeike A Taylor, Manja Lehmann,
Josephine Barnes, Nick C Fox, David J Hawkes, and Sebastien Ourselin.
"Fast free-form deformation using graphics processing units" 
Comput Meth Prog Bio 2009: doi:10.1016/j.cmpb.2009.09.002

#######################################################################################
# NOTE: Deprecated. Use NiftySeg instead.
#######################################################################################

EOF
exit 127
}

check_for_help_arg "$*"
if [ $? -eq 1 ]; then
  Usage
fi

# You need to generate this. You cant do `dirname $0` as it wont work on the cluster.
progdir=@NIFTK_INSTALL_BIN_DIR@

ndefargs=2
keeptmp=0
tmp_root=/tmp
use_tmp_dir=0
spm_dir=
set_spm_dir=0
use_gpu=0
atlas=${progdir}/../matlab/segmentation/single_subj_T1.nii
use_atlas=0
grey_prior=${progdir}/../matlab/segmentation/grey_prior.nii 
use_grey=0
white_prior=${progdir}/../matlab/segmentation/white.nii
use_white=0
csf_prior=${progdir}/../matlab/segmentation/csf_prior.nii
use_csf=0
deep_grey_prior=${progdir}/../matlab/segmentation/deep_grey_prior.nii
use_deep_grey=0
internal_csf_prior=${progdir}/../matlab/segmentation/internal_csf_prior.nii
use_internal_csf=0
levels_pyramid=3
levels_perform=2
dilations=2
cpp_trans=
use_cpp_trans=0


# Check args
if [ $# -lt $ndefargs ]; then
  Usage
fi

# Get required parameters
image=$1
mask=$2

# Parse remaining command line options
shift $ndefargs
while [ "$#" -gt 0 ]
do
  case $1 in
  -h)
      Usage
      ;;
	-tmpdir)
	    tmpdir=$2
	    shift 1
	    ;;
	-tmproot)
	    tmp_root=$2
	    shift 1
	    ;;
  -keeptmp)
	    keeptmp=1
	    ;;
	-spm)
	    spm_dir=$2
	    shift 1
	    set_spm_dir=1
	    ;;
	-atlas)
	    atlas=$2
	    shift 1
	    use_atlas=1
	    ;;
	-grey)
	    grey_prior=$2
	    shift 1
	    use_grey=1
	    ;;
	-white)
	    white_prior=$2
	    shift 1
	    use_white=1
	    ;;
	-csf)
	    csf_prior=$2
	    shift 1
	    use_csf=1
	    ;;
	-deep_grey)
	    deep_grep_prior=$2
	    shift 1
	    use_deep_grey=1
	    ;;
	-internal_csf)
	    internal_csf_prior=$2
	    shift 1
	    use_internal_csf=1
	    ;;	    
	-gpu)
	    use_gpu=1
	    ;;
	-levels)
	    levels_pyramid=$2
	    shift 1
	    ;;
	-levels_to_perform)
	    levels_perform=$2
	    shift 1
	    ;;
	-dilations)
	    dilations=$2
	    shift 1
	    ;;
    -cpp)
        cpp_trans=$2
        use_cpp_trans=1
        shift 1
        ;;	    	     
    -*)
	    exitprog "Error: option $1 not recognised" 1
	    ;;
    esac
    shift 1
done

# Use the environment variable TMPDIR
# if defined, otherwise make one up
# NB this gets overwritten if specified
# on the command line
ptmpdir=$tmp_root/seg.$$
if [ "_$tmpdir" = "_" ]; then
  tmpdir=$ptmpdir
fi

# Catch signals
trap '
    savestatus=$?
    if [ $keeptmp -eq 0 ] 
    then 
        rm -rf "$tmpdir" 
    fi && exit $savestatus
' 0

trap '
    savestatus=$?
    echo "Caught signal, cleaning up..."
    if [ $keeptmp -eq 0 ] 
    then
        echo "Removing temporary directory $tmpdir..."
        rm -rf "$tmpdir"
    else
        echo "Keeping temporary directory $tmpdir..."
    fi
    (exit $savestatus); exit
' 1 2 13 15

# Check command line arguments

if [ ! -f $image ]; then
    exitprog "The image to be segmented does not exist!" 1
fi

if [ ! -f $mask ]; then
    exitprog "The mask image does not exist!" 1
fi

if [ ! -f $atlas ]; then
    exitprog "The atlas image does not exist!" 1
fi

if [ ! -f $grey_prior ]; then
    exitprog "The grey matter prior image does not exist!" 1
fi

if [ ! -f $white_prior ]; then
    exitprog "The white matter prior image does not exist!" 1
fi

if [ ! -f $csf_prior ]; then
    exitprog "The csf matter prior image does not exist!" 1
fi

if [ ! -f $deep_grey_prior ]; then
    exitprog "The deep grey matter prior image does not exist!" 1
fi

if [ ! -f $internal_csf_prior ]; then
    exitprog "The internal csf prior image does not exist!" 1
fi

if [ ! -f $cpp_trans ]; then
    exitprog "The non rigid transformation (control point file) you specified does not exist!" 1
fi

if [ $set_spm_dir -eq 1 ]; then
    if [ ! -d $spm_dir ]; then
    	exitprog "Error: spm directory doesnt exist"
    fi
fi

if [ ! -d $tmpdir ]; then
    mkdir $tmpdir
    if [ $? -ne 0 ]; then
		exitprog "Error: unable to create temporary directory $tmpdir" 1
    fi
fi

message "Temp directory is $tmpdir"
thedate=`$DATE`
message "Start time is $thedate"

echo "Starting $0 with:"
echo "  image=$image"
echo "  mask=$mask"
echo "  atlas=$atlas"
echo "  grey_prior=$grey_prior"
echo "  white_prior=$white_prior"
echo "  csf_prior=$csf_prior"
echo "  deep_grey_prior=$deep_grey_prior"
echo "  internal_csf_prior=$internal_csf_prior"
echo "  set_spm_dir=$set_spm_dir"
echo "  spm_dir=$spm_dir"
echo "  tmpdir=$tmpdir"
echo "  keeptmp=$keeptmp"
echo "  use_gpu=$use_gpu"
echo "  levels_pyramid=$levels_pyramid"
echo "  levels_perform=$levels_perform"
echo "  dilations=$dilations"
echo "  cpp_trans=$cpp_trans"
echo "  use_cpp_trans=$use_cpp_trans"

check_program_exists matlab
check_program_exists reg_aladin
check_program_exists reg_f3d
check_program_exists reg_resample
check_program_exists reg_full.sh

thedate=`$DATE`
message "Time is $thedate"

################################################################
# Mask the T1 image, using the supplied mask.
################################################################

message "Masking brain"
execute_command_or_else_stop "niftkThreshold -i $mask -o $tmpdir/thresholded.nii -l 1 -in 1 -out 0 "
execute_command_or_else_stop "niftkDilate -i $tmpdir/thresholded.nii -o $tmpdir/dilated_mask.nii -d 1 -b 0 -r 1 -it ${dilations} "
execute_command_or_else_stop "niftkMultiply -i $image -j $tmpdir/dilated_mask.nii -o $tmpdir/masked_t1.nii"

################################################################
# Register Atlas to T1 image, saving transformation.
################################################################

message "Rescaling atlas"

# Some atlases are float images with values 0-1
execute_command_or_else_stop "niftkRescale -i $atlas -o $tmpdir/atlas_rescaled.nii -min 0 -max 255"

message "Rescaled atlas"

################################################################
# Run nifty_reg. 
################################################################

if [ $use_cpp_trans -eq 0 ]; then

	message "Starting reg_aladin"
  
	if [ $use_gpu -eq 1 ]; then
  		gpu_arg=" -gpu "
	fi
  
	# NOTE: For affine, Im always doing all the pyramid levels.
	# NOTE: The user will most likely want control for the non-rigid.
  
	linearExecutable=`which reg_aladin`
	linearArgs=" -ln $levels_pyramid -lp $levels_pyramid -%v 20 -tmask $tmpdir/dilated_mask.nii $gpu_arg -target $image -source $tmpdir/atlas_rescaled.nii -aff $tmpdir/affine.mat -result $tmpdir/atlas_registered_rigid.nii "  
	execute_command_or_else_stop "$linearExecutable $linearArgs"
  
	message "Finished reg_aladin"

	message "Starting reg_f3d"

	nonLinearExecutable=`which reg_f3d`
	nonLinearArgs=" -ln $levels_pyramid -lp $levels_perform -tmask $tmpdir/dilated_mask.nii $gpu_arg -be 0.1 -target $image -source $tmpdir/atlas_rescaled.nii -aff $tmpdir/affine.mat -result $tmpdir/atlas_registered_nrr.nii -cpp $tmpdir/cpp.nii "  
	execute_command_or_else_stop "$nonLinearExecutable $nonLinearArgs"

	message "Finished reg_f3d"
  
else
	execute_command_or_else_stop "cp ${cpp_trans} $tmpdir/cpp.nii"
fi

################################################################
# Transform images from atlas space to native T1 space
################################################################
execute_command_or_else_stop "reg_resample -target $image -source $grey_prior -cpp $tmpdir/cpp.nii -result $tmpdir/registered_grey.nii "
execute_command_or_else_stop "reg_resample -target $image -source $white_prior -cpp $tmpdir/cpp.nii -result $tmpdir/registered_white.nii "
execute_command_or_else_stop "reg_resample -target $image -source $csf_prior -cpp $tmpdir/cpp.nii -result $tmpdir/registered_csf.nii "
execute_command_or_else_stop "reg_resample -target $image -source $deep_grey_prior -cpp $tmpdir/cpp.nii -result $tmpdir/registered_deep_grey.nii "
execute_command_or_else_stop "reg_resample -target $image -source $internal_csf_prior -cpp $tmpdir/cpp.nii -result $tmpdir/registered_internal_csf.nii "
  
message "Finishing Non-linear"

################################################################
# Run matlab
################################################################

thedate=`$DATE`
message "Time is $thedate"

message "Start matlab"

if [ $set_spm_dir -eq 1 ]; then
  export MATLABPATH=$spm_dir:$MATLABPATH
fi

command="segment('$image', '$tmpdir/registered_grey.nii', '$tmpdir/registered_white.nii', '$tmpdir/registered_csf.nii', '$tmpdir/registered_deep_grey.nii', '$tmpdir/registered_internal_csf.nii', '$tmpdir/dilated_mask.nii');"
echo "Running: echo \"$command\" | matlab -nosplash -nodesktop"
echo "$command "| matlab -nosplash -nodesktop

message "Finish matlab"

################################################################
message "Cleanup"
################################################################

thedate=`$DATE`
message "Time is $thedate"

if [ $keeptmp -eq 0 ]; then
    message "Removing temp dir $tmpdir"
    execute_command_or_else_stop "rm -rf $tmpdir"
else
    message "Keeping temp dir $tmpdir"
fi

thedate=`$DATE`
message "End time is $thedate"
message "Finished"

