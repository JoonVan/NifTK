#!/bin/bash

#/*============================================================================
#
#  NifTK: A software platform for medical image computing.
#
#  Copyright (c) University College London (UCL). All rights reserved.
#
#  This software is distributed WITHOUT ANY WARRANTY; without even
#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#  PURPOSE.
#
#  See LICENSE.txt in the top level directory for details.
#
#============================================================================*/

#
# Script that was developed for the ADNI scaling project, to take an image,
# and generate a load of images with different voxel sizes in the header.

source _niftkCommon.sh

# Note: The automatic doxygen generator uses the first two lines of the usage message.

function Usage()
{
cat <<EOF
Script used to generate a bunch of randomly scaled images, used for the ADNI scaling project (Clarkson et al. NeuroImage 2009).

Usage: $0 image numberOfImages minVoxelMultiplier maxVoxelMultiplier
 
  image              - in Analyze format, without specifying the .img part.
  numberOfImages     - number of random images you want to generate
  minVoxelMultiplier - factor to scale voxel sizes by. eg. 0.99 is a 1% reduction.
  maxVoxelMultiplier - factor to scale voxel sizes by. eg. 1.01 is a 1% increase.

EOF
exit 127
}

# Check args

check_for_help_arg "$*"
if [ $? -eq 1 ]; then
  Usage
fi

if [ $# -ne 4 ]; then
fi

IMAGE=$1
NUMBER_OF_IMAGES=$2
MIN_VOX_MULTIPLIER=$3
MAX_VOX_MULTIPLIER=$4

# Seed the random number generator.
RANDOM=$$

i=0
while [ "$i" -lt "$NUMBER_OF_IMAGES" ] 
do

  # Extract voxel sizes
  DIMS=`imginfo $IMAGE.img -dims`
  VX=`echo $DIMS | awk '{print $4}'`
  VY=`echo $DIMS | awk '{print $5}'`
  VZ=`echo $DIMS | awk '{print $6}'`
  
  # Generate 3 random numbers between minVoxelMultiplier & maxVoxelMultiplier times the voxel size
  vx=`echo "scale=10; ((($RANDOM/32767.0)*($MAX_VOX_MULTIPLIER-$MIN_VOX_MULTIPLIER))+($MIN_VOX_MULTIPLIER))*$VX " | bc `
  vy=`echo "scale=10; ((($RANDOM/32767.0)*($MAX_VOX_MULTIPLIER-$MIN_VOX_MULTIPLIER))+($MIN_VOX_MULTIPLIER))*$VY " | bc `
  vz=`echo "scale=10; ((($RANDOM/32767.0)*($MAX_VOX_MULTIPLIER-$MIN_VOX_MULTIPLIER))+($MIN_VOX_MULTIPLIER))*$VZ " | bc `

  #  Change header
  anchange $IMAGE $IMAGE.$vx.$vy.$vz.img -sx $vx -sy $vy -sz $vz

  echo $VX $VY $VZ $vx $vy $vz
  
  # Increment loop counter
  i=$(($i+1))
done
