<!--
State machine pattern for display interactions:
-Zooming
-Panning
-Scrolling through planes
-Adjusting the LevelWindow

For some interactions several transitions exists, which one is used can be determined by the configuration file.
If an event_variant is not declared in the configuration file it is disabled.

For example scrolling can be triggered by Key-, Wheel- or MouseMove events, where the latter needs an extra state for scrolling.
So they are triggered by different event_variants, to choose which one is used, describe the desired event_variant in a config file
and omit the others. See DisplayConfig___ for examples and also for parameters for the interaction behaviour.


TODO Std move to abort interaction of scroll/pan/zoom
-->
<statemachine>

    <state name="start" startstate="true" >
        <transition event_class="InteractionPositionEvent" event_variant="StartSelectingPosition" target="selectingPosition">
            <action name="selectPosition"/>
        </transition>
        <transition event_class="InteractionPositionEvent" event_variant="StartPanning" target="panning">
            <action name="initMove"/>
        </transition>
        <transition event_class="InteractionPositionEvent" event_variant="StartZooming" target="zooming">
            <action name="initZoom"/>
        </transition>

        <transition event_class="InteractionEvent" event_variant="SelectAnteriorSlice" target="start">
            <action name="ScrollOneUp"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="SelectPosteriorSlice" target="start">
            <action name="ScrollOneDown"/>
        </transition>

        <transition event_class="InteractionEvent" event_variant="SelectPreviousTimeStep" target="start">
            <action name="selectPreviousTimeStep"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="SelectNextTimeStep" target="start">
            <action name="selectNextTimeStep"/>
        </transition>

        <transition event_class="InteractionEvent" event_variant="StartScrollingThroughSlicesAnterior" target="scrollingThroughSlicesAnterior">
            <action name="startScrollingThroughSlicesAnterior"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartScrollingThroughSlicesPosterior" target="scrollingThroughSlicesPosterior">
            <action name="startScrollingThroughSlicesPosterior"/>
        </transition>

        <transition event_class="InteractionKeyEvent" event_variant="AxialWindowLayout" target="start">
            <action name="setWindowLayoutToAxial"/>
        </transition>
        <transition event_class="InteractionKeyEvent" event_variant="SagittalWindowLayout" target="start">
            <action name="setWindowLayoutToSagittal"/>
        </transition>
        <transition event_class="InteractionKeyEvent" event_variant="CoronalWindowLayout" target="start">
            <action name="setWindowLayoutToCoronal"/>
        </transition>
        <transition event_class="InteractionKeyEvent" event_variant="3DWindowLayout" target="start">
            <action name="setWindowLayoutTo3D"/>
        </transition>
        <transition event_class="InteractionKeyEvent" event_variant="MultiWindowLayout" target="start">
            <action name="setWindowLayoutToMulti"/>
        </transition>
        <transition event_class="MouseDoubleClickEvent" event_variant="ToggleMultiWindowLayout" target="start">
            <action name="toggleMultiWindowLayout"/>
        </transition>

        <transition event_class="InteractionKeyEvent" event_variant="ToggleCursorVisibility" target="start">
            <action name="toggleCursorVisibility"/>
        </transition>
    </state>

    <state name="selectingPosition">
        <transition event_class="InteractionPositionEvent" event_variant="SelectingPosition" target="selectingPosition">
            <action name="selectPosition"/>
        </transition>
        <transition event_class="InteractionPositionEvent" event_variant="StopSelectingPosition" target="start"/>
    </state>

    <state name="panning">
        <transition event_class="InteractionPositionEvent" event_variant="Panning" target="panning">
            <action name="move"/>
        </transition>
        <transition event_class="InteractionPositionEvent" event_variant="StopPanning" target="start"/>
    </state>

    <state name="zooming">
        <transition event_class="InteractionPositionEvent" event_variant="Zooming" target="zooming">
            <action name="zoom"/>
        </transition>
        <transition event_class="InteractionPositionEvent" event_variant="StopZooming" target="start"/>
    </state>

    <state name="scrollingThroughSlicesAnterior">
        <transition event_class="InteractionEvent" event_variant="StopScrolling" target="start">
            <action name="stopScrolling"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartSelectingPosition" target="selectingPosition">
            <action name="stopScrolling"/>
            <action name="selectPosition"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartPanning" target="panning">
            <action name="stopScrolling"/>
            <action name="initMove"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartZooming" target="zooming">
            <action name="stopScrolling"/>
            <action name="initZoom"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartScrollingThroughSlicesAnterior" target="start">
            <action name="stopScrolling"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartScrollingThroughSlicesPosterior" target="scrollingThroughSlicesPosterior">
            <action name="stopScrolling"/>
            <action name="startScrollingThroughSlicesPosterior"/>
        </transition>
    </state>
    <state name="scrollingThroughSlicesPosterior">
        <transition event_class="InteractionEvent" event_variant="StopScrolling" target="start">
            <action name="stopScrolling"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartSelectingPosition" target="selectingPosition">
            <action name="stopScrolling"/>
            <action name="selectPosition"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartPanning" target="panning">
            <action name="stopScrolling"/>
            <action name="initMove"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartZooming" target="zooming">
            <action name="stopScrolling"/>
            <action name="initZoom"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartScrollingThroughSlicesPosterior" target="start">
            <action name="stopScrolling"/>
        </transition>
        <transition event_class="InteractionEvent" event_variant="StartScrollingThroughSlicesAnterior" target="scrollingThroughSlicesAnterior">
            <action name="stopScrolling"/>
            <action name="startScrollingThroughSlicesAnterior"/>
        </transition>
    </state>

</statemachine>
