##########################################
# Jobs for continuous testing
##########################################

# Linux CI build for every commit
Linux build:

  stage: build

  script:
  - src_dir=`pwd`
  - cd ..
  - root_dir=`pwd`
  - ep_dir="/home/gitlab-runner/src/niftk-ep"
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - /home/gitlab-runner/bin/niftk-ep-clean-up.sh ${src_dir} ${ep_dir} &
  - hostname
  - whoami
  - pwd
  - rm -rf ${sb_dir}
  - mkdir ${sb_dir}
  - cd ${sb_dir}
  - cmake -DEP_BASE:PATH=${ep_dir}
        -DEP_ALWAYS_USE_INSTALL_DIR:BOOL=OFF
        -DEP_DIRECTORY_PER_VERSION:BOOL=ON
        -DBUILD_TESTING:BOOL=ON
        -DNIFTK_USE_CPPCHECK:BOOL=ON
        -DNIFTK_USE_KWSTYLE:BOOL=ON
        -DNIFTK_Apps/NiftyView:BOOL=ON
        -DNIFTK_Apps/NiftyIGI:BOOL=ON
        ${src_dir}
  - make -j 8

  only:
  - branches

  tags:
  - linux


Linux test:

  stage: test

  script:
  - cd ..
  - root_dir=`pwd`
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - hostname
  - whoami
  - pwd
  - cd ${pb_dir}
  - ctest -S CTestContinuous.cmake -V

  only:
  - branches

  tags:
  - linux


Mac build:

  stage: build

  script:
  - src_dir=`pwd`
  - cd ..
  - root_dir=`pwd`
  - ep_dir="/Users/gitlab-runner/src/niftk-ep"
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - /home/gitlab-runner/bin/niftk-ep-clean-up.sh ${src_dir} ${ep_dir} &
  - hostname
  - whoami
  - pwd
  - rm -rf ${sb_dir}
  - mkdir ${sb_dir}
  - cd ${sb_dir}
  - cmake -DEP_BASE:PATH=${ep_dir}
        -DEP_ALWAYS_USE_INSTALL_DIR:BOOL=OFF
        -DEP_DIRECTORY_PER_VERSION:BOOL=ON
        -DBUILD_TESTING:BOOL=ON
        -DNIFTYLINK_CHECK_COVERAGE=ON
        -DNIFTK_Apps/NiftyView:BOOL=ON
        -DNIFTK_Apps/NiftyIGI:BOOL=ON
        ${src_dir}
  - make -j 8

  only:
#  - branches
  - never

  tags:
  - mac


Mac test:

  stage: test

  script:
  - src_dir=`pwd`
  - cd ..
  - root_dir=`pwd`
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - hostname
  - whoami
  - pwd
  - cd ${pb_dir}
  - ctest -S CTestContinuous.cmake -V

  only:
#  - branches
  - never

  tags:
  - mac


Windows build:

  stage: build

  script:
  - "@echo off"
  - hostname
  - '"C:\CB\slowrunner.exe" -v -2 -e "c:\CB\NifTKContinuousBuild.bat"'
  - "@exit /b %errorlevel%"

  only:
#  - branches
  - never

  tags:
  - windows


Windows test:

  stage: test

  script:
  - hostname
  - whoami
  - cd
  - rem cd NifTK-build
  - rem ctest -S CTestContinuous.cmake -V

  only:
#  - branches
  - never

  tags:
  - windows


##########################################
# Deploy development documentation pages
##########################################

Deploy current docs:

  stage: deploy

  script:
  - src_dir=`pwd`
  - cd ..
  - root_dir=`pwd`
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - cd ${pb_dir}
  - chmod a+rx bin/GenerateCommandLineDoxygen
  - bin/GenerateCommandLineDoxygen
  - chmod a+rx bin/GenerateTestingReports
  - bin/GenerateTestingReports
  - doxygen doxygen.config
  - NIFTK_VERSION=`grep "NIFTK_VERSION_STRING:STRING" CMakeCache.txt | cut -c 29-`
  - echo "${NIFTK_VERSION}"
  - cd Doxygen
  - rm -rf niftk-current-docs
  - mv ${NIFTK_VERSION}/html niftk-current-docs
  - find . -type f -exec chmod 644 {} \;
  - find . -type d -exec chmod 755 {} \;
  - documentation_file="niftk-current-docs.tar.bz2"
  - tar cfj ${documentation_file} niftk-current-docs
  - echo "API reference documentation generated:"
  - echo `pwd`/${documentation_file}
  - "# Delete the previous tarball"
  - ssh cmiclab rm -f /cs/research/medic/cmiclab/gitlab/deploy/CMIC/NifTK/docs/${documentation_file}
  - "# Upload the tarball"
  - scp ${documentation_file} cmiclab:/cs/research/medic/cmiclab/gitlab/deploy/CMIC/NifTK/docs/
  - "# Extract the tarball and replace the old files"
  - ssh cmiclab "cd /cs/research/medic/cmiclab/gitlab/deploy/CMIC/NifTK/docs ;
        tar xvfj ${documentation_file} ;
        mv current tmp ;
        mv niftk-current-docs current ;
        rm -rf tmp"

  only:
  - master
  - dev

  tags:
  - linux


##########################################
# Jobs for deploying tagged releases
##########################################

# Linux build for tagged versions.
# Without testing and with Python.
Linux release build:

  stage: build

  script:
  - src_dir=`pwd`
  - cd ..
  - root_dir=`pwd`
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - hostname
  - whoami
  - pwd
  - rm -rf ${sb_dir}
  - mkdir ${sb_dir}
  - cd ${sb_dir}
  - cmake -DBUILD_TESTING:BOOL=OFF
        -DNIFTK_USE_CPPCHECK:BOOL=OFF
        -DNIFTK_USE_KWSTYLE:BOOL=OFF
        -DBUILD_Python:BOOL=ON
        -DNIFTK_Apps/NiftyView:BOOL=ON
        -DNIFTK_Apps/NiftyIGI:BOOL=ON
        ${src_dir}
  - make -j 8

  only:
  - tags

  tags:
  - linux


# Generating documentation pages for tagged releases
Deploy release docs:

  stage: deploy

  script:
  - src_dir=`pwd`
  - cd ..
  - root_dir=`pwd`
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - cd ${pb_dir}
  - chmod a+rx bin/GenerateCommandLineDoxygen
  - bin/GenerateCommandLineDoxygen
  - chmod a+rx bin/GenerateTestingReports
  - bin/GenerateTestingReports
  - doxygen doxygen.config
  - NIFTK_VERSION=`grep "NIFTK_VERSION_STRING:STRING" CMakeCache.txt | cut -c 29-`
  - echo "${NIFTK_VERSION}"
  - cd Doxygen
  - mv ${NIFTK_VERSION}/html niftk-${NIFTK_VERSION}-docs
  - find . -type f -exec chmod 644 {} \;
  - find . -type d -exec chmod 755 {} \;
  - documentation_file="niftk-${NIFTK_VERSION}-docs.tar.bz2"
  - tar cfj ${documentation_file} niftk-${NIFTK_VERSION}-docs
  - echo "API reference documentation generated:"
  - echo `pwd`/${documentation_file}
  - "# Delete the previous tarball"
  - ssh cmiclab rm -f /cs/research/medic/cmiclab/gitlab/deploy/CMIC/NifTK/docs/${documentation_file}
  - "# Upload the tarball"
  - scp ${documentation_file} cmiclab:/cs/research/medic/cmiclab/gitlab/deploy/CMIC/NifTK/docs/
  - "# Extract the tarball and replace the old files"
  - ssh cmiclab "cd /cs/research/medic/cmiclab/gitlab/deploy/CMIC/NifTK/docs ;
        tar xfj ${documentation_file} ;
        rm -rf ${NIFTK_VERSION} ;
        mv niftk-${NIFTK_VERSION}-docs ${NIFTK_VERSION}"

  artifacts:
    paths:
      - ${pb_dir}/Doxygen/${documentation_file}

  only:
  - tags

  tags:
  - linux


Deploy Linux installer:

  stage: deploy

  script:
  - src_dir=`pwd`
  - cd ..
  - root_dir=`pwd`
  - sb_dir="${root_dir}/niftk-sb"
  - pb_dir="${sb_dir}/NifTK-build"
  - HOSTNAME=`hostname`
  - cd ${pb_dir}
  - NIFTK_VERSION=`grep "NIFTK_VERSION_STRING:STRING" CMakeCache.txt | cut -c 29-`
  - echo "${NIFTK_VERSION}"
  - make package
  - installer_file="niftk-${VERSION}-linux-centos-7-x64.tar.gz"
  - mv niftk-${NIFTK_VERSION}.tar.gz ${installer_file}
  - "# Upload the tarball"
  - scp ${installer_file} cmiclab:/cs/research/medic/cmiclab/gitlab/deploy/CMIC/NifTK/install/

  artifacts:
    paths:
      - ${pb_dir}/${installer_file}

  only:
  - tags

  tags:
  - linux
